# AWS Amplify Build Configuration for FitWithPari
# Optimized for React + Vite fitness platform with Zoom Video SDK

version: 1
applications:
  - frontend:
      phases:
        preBuild:
          commands:
            - echo "Installing dependencies for Vite React app..."
            - npm ci
            - echo "Setting up environment variables for production..."
            # Supabase configuration
            - echo "VITE_SUPABASE_URL=$VITE_SUPABASE_URL" >> .env.production
            - echo "VITE_SUPABASE_PUBLISHABLE_KEY=$VITE_SUPABASE_PUBLISHABLE_KEY" >> .env.production
            # Zoom SDK configuration (frontend only - no secrets)
            - echo "VITE_ZOOM_SDK_KEY=$VITE_ZOOM_SDK_KEY" >> .env.production
            # API endpoints (Lambda function URLs)
            - echo "VITE_API_ENDPOINT=$VITE_API_ENDPOINT" >> .env.production
            - echo "VITE_ZOOM_TOKEN_ENDPOINT=$VITE_ZOOM_TOKEN_ENDPOINT" >> .env.production
            # App configuration
            - echo "VITE_APP_URL=$VITE_APP_URL" >> .env.production
            - echo "VITE_DEFAULT_SESSION_NAME=$VITE_DEFAULT_SESSION_NAME" >> .env.production
            # Feature flags
            - echo "VITE_ENABLE_ANALYTICS=$VITE_ENABLE_ANALYTICS" >> .env.production
            - echo "VITE_ENABLE_CHAT=$VITE_ENABLE_CHAT" >> .env.production
            - echo "VITE_ENABLE_RECORDINGS=$VITE_ENABLE_RECORDINGS" >> .env.production
            - echo "VITE_ENABLE_HEALTH_TRACKING=$VITE_ENABLE_HEALTH_TRACKING" >> .env.production
            # Environment
            - echo "NODE_ENV=production" >> .env.production
            - echo "VITE_NODE_ENV=production" >> .env.production
            - echo "Environment variables configured for Vite build"
        build:
          commands:
            - echo "Building React + TypeScript app with Vite..."
            - npm run build:check
            - echo "Vite build completed - optimized for production"
        postBuild:
          commands:
            - echo "Post-build optimizations..."
            - echo "Verifying build artifacts..."
            - ls -la dist/
            - echo "Setting up custom headers and security configurations..."
            - echo "Deployment ready for fitness platform with video streaming"
    artifacts:
      baseDirectory: dist
      files:
        - '**/*'
    cache:
      paths:
        - node_modules/**/*
        - .npm/**/*
    customHeaders:
      - pattern: '**/*'
        headers:
          # Security headers optimized for video streaming
          - key: 'X-Frame-Options'
            value: 'SAMEORIGIN'
          - key: 'X-Content-Type-Options'
            value: 'nosniff'
          - key: 'X-XSS-Protection'
            value: '1; mode=block'
          - key: 'Strict-Transport-Security'
            value: 'max-age=31536000; includeSubDomains; preload'
          - key: 'Referrer-Policy'
            value: 'strict-origin-when-cross-origin'
          # Permissions Policy for camera/microphone access
          - key: 'Permissions-Policy'
            value: 'camera=*, microphone=*, display-capture=*, screen-wake-lock=*'
          # Content Security Policy for Zoom SDK
          - key: 'Content-Security-Policy'
            value: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' *.zoom.us *.zoomus.com; connect-src 'self' *.zoom.us *.zoomus.com *.supabase.co wss://*.zoom.us wss://*.zoomus.com; media-src 'self' blob: *.zoom.us *.zoomus.com; img-src 'self' data: blob: *.zoom.us *.zoomus.com; style-src 'self' 'unsafe-inline'"
      - pattern: '/assets/**'
        headers:
          # Aggressive caching for static assets
          - key: 'Cache-Control'
            value: 'public, max-age=31536000, immutable'
          - key: 'Cross-Origin-Resource-Policy'
            value: 'cross-origin'
      - pattern: '*.js'
        headers:
          # JavaScript files caching
          - key: 'Cache-Control'
            value: 'public, max-age=31536000, immutable'
          - key: 'Content-Type'
            value: 'application/javascript'
      - pattern: '*.css'
        headers:
          # CSS files caching
          - key: 'Cache-Control'
            value: 'public, max-age=31536000, immutable'
          - key: 'Content-Type'
            value: 'text/css'
    rewrites:
      - source: '</^[^.]+$|\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|woff2|ttf|map|json)$)([^.]+$)/>'
        target: '/index.html'
    environmentVariables:
      # Runtime environment variables
      - name: AMPLIFY_MONOREPO_APP_ROOT
        value: .
      - name: AMPLIFY_DIFF_DEPLOY
        value: true
      - name: AMPLIFY_DIFF_DEPLOY_ROOT
        value: build
      - name: _LIVE_UPDATES
        value: '[{"name":"Amplify CLI","pkg":"@aws-amplify/cli","type":"npm","version":"latest"}]'