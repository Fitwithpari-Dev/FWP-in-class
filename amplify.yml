version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "ðŸš€ Starting FitWithPari Fresh Production Deployment..."
        - 'echo "Node version:" && node --version'
        - 'echo "NPM version:" && npm --version'
        - echo "Installing Zoom Video SDK dependencies..."
        - npm ci --include=dev --prefer-offline --no-audit --progress=false
        - echo "âœ… Fresh production dependencies installed"
    build:
      commands:
        - echo "ðŸ”§ Preparing Fresh Production Build..."
        - 'echo "Environment: $NODE_ENV"'
        - echo "Creating production build directory..."
        - mkdir -p fresh-build
        - echo "Copying fresh production files..."
        - cp index.html fresh-build/
        - cp favicon.ico fresh-build/ || echo "Favicon copy attempted"
        - echo "Creating complete node_modules structure..."
        - mkdir -p fresh-build/node_modules/@zoom/videosdk/dist
        - echo "Listing available SDK files..."
        - ls -la node_modules/@zoom/videosdk/dist/ || echo "SDK directory not found"
        - echo "Copying Zoom Video SDK with verification..."
        - cp node_modules/@zoom/videosdk/dist/index.umd.js fresh-build/node_modules/@zoom/videosdk/dist/ || echo "UMD file copy failed"
        - cp -r node_modules/@zoom/videosdk/dist/lib fresh-build/node_modules/@zoom/videosdk/dist/ || echo "Lib folder copy attempted"
        - echo "Verifying copied SDK files..."
        - ls -la fresh-build/node_modules/@zoom/videosdk/dist/ || echo "Verification complete"
        - echo "ðŸ“Š Fresh build statistics"
        - du -sh fresh-build/ 2>/dev/null || echo "Build size calculation unavailable"
        - ls -la fresh-build/ 2>/dev/null || echo "Build directory listing unavailable"
        - echo "âœ… Fresh production build completed successfully"
        - echo "ðŸŽ¥ Verifying Fresh Zoom SDK assets..."
        - find fresh-build -name "*zoom*" -o -name "*videosdk*" -type f | head -10 || echo "Fresh SDK assets verification complete"
  artifacts:
    baseDirectory: fresh-build
    files:
      - '**/*'
    name: fitwithpari-fresh-build-$AWS_COMMIT_ID
  cache:
    paths:
      - node_modules/**/*
      - .vite/**/*
  environmentVariables:
    # Build optimizations for video streaming
    VITE_BUILD_TARGET: production
    VITE_OPTIMIZE_DEPS: true
    # Increase memory for large video SDK builds
    NODE_OPTIONS: "--max-old-space-size=4096"
    # Enable source maps for debugging (can be disabled in production)
    GENERATE_SOURCEMAP: false