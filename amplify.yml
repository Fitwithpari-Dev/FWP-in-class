version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "ðŸš€ Starting FitWithPari deployment with Unified Video SDK (Agora + Zoom)..."
        - 'echo "Node version:" && node --version'
        - 'echo "NPM version:" && npm --version'
        - echo "Installing dependencies with production optimizations..."
        - npm ci --include=dev --prefer-offline --no-audit --progress=false
        - echo "âœ… Dependencies installed successfully"
    build:
      commands:
        - echo "ðŸ”§ Building V2 Clean Architecture with Vite for production..."
        - 'echo "Environment: $NODE_ENV"'
        - echo "Build target Production with V2 video streaming optimizations"
        - npm run build:v2
        - echo "ðŸ“Š Build statistics"
        - du -sh build-v2/ 2>/dev/null || echo "Build size calculation unavailable"
        - ls -la build-v2/ 2>/dev/null || echo "Build directory listing unavailable"
        - echo "âœ… Vite build completed successfully"
        - echo "ðŸŽ¥ Verifying Video SDK assets..."
        - find build-v2 -name "*zoom*" -o -name "*agora*" -type f | head -10 || echo "Video SDK assets verification complete"
  artifacts:
    baseDirectory: build-v2
    files:
      - '**/*'
    name: fitwithpari-build-$AWS_COMMIT_ID
  cache:
    paths:
      - node_modules/**/*
      - .vite/**/*
  environmentVariables:
    # Build optimizations for video streaming
    VITE_BUILD_TARGET: production
    VITE_OPTIMIZE_DEPS: true
    # Increase memory for large video SDK builds
    NODE_OPTIONS: "--max-old-space-size=4096"
    # Enable source maps for debugging (can be disabled in production)
    GENERATE_SOURCEMAP: false